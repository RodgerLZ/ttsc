<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.ttsc.dao.TbContentCategoryMapper">
  <resultMap id="BaseResultMap" type="org.example.ttsc.entity.TbContentCategory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="is_parent" jdbcType="BIT" property="isParent" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>

  <sql id="Base_Column_List">
    id,parent_id,name,status,sort_order,is_parent,created,updated
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_content_category
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.example.ttsc.entity.TbContentCategory" useGeneratedKeys="true" keyProperty="id">
    insert into tb_content_category (id, parent_id, name, 
      status, sort_order, is_parent, 
      created, updated)
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{sortOrder,jdbcType=INTEGER}, #{isParent,jdbcType=BIT}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.example.ttsc.entity.TbContentCategory">
    update tb_content_category
    set parent_id = #{parentId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      is_parent = #{isParent,jdbcType=BIT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, parent_id, name, status, sort_order, is_parent, created, updated
    from tb_content_category
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, parent_id, name, status, sort_order, is_parent, created, updated
    from tb_content_category
  </select>
  <select id="selectByParentId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, parent_id, name, status, sort_order, is_parent, created, updated
    from tb_content_category
    where parent_id = #{parentId,jdbcType=BIGINT}
  </select>

  <update id="updateSelective" parameterType="org.example.ttsc.entity.TbContentCategory">
    update tb_content_category
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="isParent != null">
        is_parent = #{isParent,jdbcType=BIT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectList" parameterType="org.example.ttsc.entity.TbContentCategory" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_content_category
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="parentId != null">
        and parent_id = #{parentId,jdbcType=BIGINT}
      </if>
      <if test="name != null">
        and name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="sortOrder != null">
        and sort_order = #{sortOrder,jdbcType=INTEGER}
      </if>
      <if test="isParent != null">
        and is_parent = #{isParent,jdbcType=BIT}
      </if>
      <if test="created != null">
        and created = #{created,jdbcType=TIMESTAMP}
      </if>
      <if test="updated != null">
        and updated = #{updated,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
</mapper>